record(bo, "$(P)SIM")
{
    field(SCAN, "Passive")
    field(DTYP, "Soft Channel")
    field(ZNAM, "NO")
    field(ONAM, "YES")
    field(VAL, "$(RECSIM=0)")
    field(PINI, "YES")
}

record(bo, "$(P)DISABLE")
{
    field(DESC, "Disable comms")
    field(PINI, "YES")
    field(VAL, "$(DISABLE=0)")
    field(OMSL, "supervisory")
    field(ZNAM, "COMMS ENABLED")
    field(ONAM, "COMMS DISABLED")
}

record(longin, "$(P)ID") {
    field(DESC, "PSU ID number")
    field(DTYP, "stream")
    field(SCAN, "10 second")            # SCAN rather than PINI to continuously check communications with device
    field(INP,  "@ambrell_easy_heat.proto getID($(ADDRESS)) $(PORT)")

    info(alarm, "AMBRHEAT")             # add IOC to alarm system
    info(INTEREST, "MEDIUM")
    info(archive, "VAL")

    field(SIML, "$(P)SIM")
    field(SIOL, "$(P)SIM:ID")
    field(SDIS, "$(P)DISABLE")
}

record(longin, "$(P)ADDRESS:RBV") {
    field(DESC, "PSU Address")
    field(DTYP, "stream")
    field(SCAN, "1 second") 
    field(INP,  "@ambrell_easy_heat.proto getData($(ADDRESS),$(P)) $(PORT)") # PV to read PSU data string and trigger record redirection to individual PVs

    info(INTEREST, "MEDIUM")
    info(archive, "VAL")

    field(SIML, "$(P)SIM")
    field(SIOL, "$(P)SIM:ADDRESS:RBV")
    field(SDIS, "$(P)DISABLE")
}

record(bi, "$(P)HEAT:RBV")
{
    field(DESC, "Heat status")
    field(DTYP, "Soft Channel")
    field(ZNAM, "OFF")
    field(ONAM, "ON")

    info(INTEREST, "HIGH")
    info(archive, "VAL")
    
    field(SIML, "$(P)SIM")
    field(SIOL, "$(P)SIM:HEAT:RBV")
    field(SDIS, "$(P)DISABLE")
}

# record(waveform, "$(P)DATA:RAW") {
#     field(DESC, "Raw data from PSU")
#     field(DTYP, "stream")
#     field(SCAN, "1 second")
#     field(NELM, "64")
#     field(FTVL, "STRING")
#     field(INP,  "@ambrell_easy_heat.proto getRawData($(ADDRESS)) $(PORT)")
#     
#     info(INTEREST, "LOW")
#     info(archive, "VAL")
# 
#     field(SIML, "$(P)SIM")
#     field(SIOL, "$(P)SIM:DATA:RAW")
#     field(SDIS, "$(P)DISABLE")
# }
# 
# record(waveform, "$(P)STATUS:RAW") {
#     field(DESC, "Raw status of PSU")
#     field(DTYP, "stream")
#     field(SCAN, "1 second")
#     field(NELM, "64")
#     field(FTVL, "STRING")
#     field(INP,  "@ambrell_easy_heat.proto getRawStatus($(ADDRESS)) $(PORT)")
# 
#     info(INTEREST, "LOW")
#     info(archive, "VAL")
# 
#     field(SIML, "$(P)SIM")
#     field(SIOL, "$(P)SIM:STATUS:RAW")
#     field(SDIS, "$(P)DISABLE")
# }

# Simulation records

record(longin,"$(P)SIM:ID")
{
    field(SCAN, "Passive")
    field(DTYP, "Soft Channel")
    field(VAL,  "12345")
}

record(longin,"$(P)SIM:ADDRESS:RBV")
{
    field(SCAN, "Passive")
    field(DTYP, "Soft Channel")
    field(VAL,  "3")
}

record(bi,"$(P)SIM:HEAT:RBV")
{
    field(SCAN, "Passive")
    field(DTYP, "Soft Channel")
    field(VAL,  "ON")
}

# record(stringin,"$(P)SIM:DATA:RAW")
# {
#     field(SCAN, "Passive")
#     field(DTYP, "Soft Channel")
#     field(VAL,  "1,1,280.0,280.0,1006,286,0,972")
# }
# 
# record(stringin,"$(P)SIM:STATUS:RAW")
# {
#     field(SCAN, "Passive")
#     field(DTYP, "Soft Channel")
#     field(VAL,  "1,2,3,4,5")
# }
